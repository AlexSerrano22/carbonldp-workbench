@import "~@angular/material/theming";
@import "~app/_vars";

$node-height: 24px;
$carat-width: $node-height - 6px;

:host {
	overflow-x: auto;
}

.ai {
	&-tree {
		ul,
		li {
			margin-top: 0;
			margin-bottom: 0;
			list-style-type: none;
		}

		&__node {
			display: block;
		}

		&__nodeContent {
			display: flex;
			flex-direction: row;

			width: 100%;
			height: $node-height;
		}

		&__nodeContent:hover {
			cursor: pointer;
		}

		// Selection styles
		&__nodeContent {
			border-left: 3px solid transparent;
		}
		// The selector needs to specify the levels otherwise it will affect nested nodes
		&__node--selected > &__nodeItem > &__nodeContent {
			border-left-color: mat-color( map-get( $app-theme, accent ), default );
			background: mat-color( map-get( $app-theme, background ), selected-button );
		}
		&--unfocused &__node--selected > &__nodeItem > &__nodeContent {
			background: mat-color( map-get( $app-theme, background ), disabled-list-option );
		}

		&__nodePadder {
			// Determines the level of padding the component will add
			--level: 0;

			flex: 0 0 calc( var( --level ) * #{ $carat-width } );

			height: $node-height;
		}

		&__nodeToggle {
			height: $node-height;
		}

		&__nodeToggle {
			flex: 0 0 $carat-width;

			// Add some padding so it doesn't look too separated from the node's icon
			padding-left: 7px;
		}

		&__nodeIcon {
			flex: 0 0 $node-height;
		}

		&__nodeToggle,
		&__nodeIcon {
			height: $node-height;

			// Center child element horizontally and vertically
			display: flex;
			justify-content: center;
			align-items: center;
		}

		&__nestedNodes {
			// Override list's default left padding
			padding-left: 0;
		}
	}
}

// Overrides
.mat-tree-node {
	// Material UI comes with an already defined min-height for tree nodes
	min-height: auto !important;
}
